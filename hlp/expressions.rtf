{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}{\f23\froman\fcharset128\fprq1{\*\panose 00000000000000000000}MS Mincho{\*\falt ?? ??};}
{\f28\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\f60\froman\fcharset238\fprq2 Times New Roman CE;}{\f61\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f63\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f64\froman\fcharset162\fprq2 Times New Roman Tur;}{\f65\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f66\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f67\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f68\fswiss\fcharset238\fprq2 Arial CE;}{\f69\fswiss\fcharset204\fprq2 Arial Cyr;}{\f71\fswiss\fcharset161\fprq2 Arial Greek;}{\f72\fswiss\fcharset162\fprq2 Arial Tur;}{\f73\fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f74\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f75\fswiss\fcharset186\fprq2 Arial Baltic;}{\f76\fmodern\fcharset238\fprq1 Courier New CE;}{\f77\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f79\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f80\fmodern\fcharset162\fprq1 Courier New Tur;}{\f81\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f82\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f83\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1033\langfe1033\kerning32\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Plain Text;}{\s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 footnote text;}{\*\cs17 \additive \super \sbasedon10 footnote reference;}}{\info{\title MegaTune Expressions}{\author Compaq}{\operator Eric}{\creatim\yr2004\mo2\dy11\hr10\min25}
{\revtim\yr2004\mo4\dy29\hr22\min57}{\version13}{\edmins44}{\nofpages2}{\nofwords236}{\nofchars1349}{\*\company Compaq}{\nofcharsws0}{\vern8247}}\margl1319\margr1319 
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1701\dgvorigin1984\dghshow1\dgvshow1
\jexpand\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\sb60\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs32\lang1033\langfe1033\kerning32\cgrid\langnp1033\langfenp1033 {\cs17\super\dbch\af23 \hich\af1\dbch\af23\loch\f1 #{\footnote \pard\plain \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs17\super #}{IDH_EXPRESSIONS}}}{\dbch\af23 \hich\af1\dbch\af23\loch\f1 Expressions
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 
MegaTune allows you to compute values from MegaSquirt\hich\f1 \rquote \loch\f1 s output channel data or from constants and settings in the database.
\par 
\par \hich\af1\dbch\af23\loch\f1 Data types:
\par }\pard \s15\ql \fi-360\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 Int - signed 32-bit integer.
\par \hich\af1\dbch\af23\loch\f1 Double - double precision floating point numbers.
\par \hich\af1\dbch\af23\loch\f1 String - dynamic length collection of characters.
\par \hich\af1\dbch\af23\loch\f1 Boolean - results derived from comparisons or directly from above values, with 0, 0.0 and "" being false and all other values being true.
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\loch\af1\hich\af1\dbch\af23 
\par \hich\af1\dbch\af23\loch\f1 Operators in orde\hich\af1\dbch\af23\loch\f1 r of descending precedence:
\par }\pard \s15\ql \fi-180\li540\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin540\itap0 {\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 () }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 grouping
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 !  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 logical NOT
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 ~  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 bitwise NOT
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 -  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 unary minus = negation
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 *  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 multiplication
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 /  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 division
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 %  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 modulus
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 +  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 addition
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 -  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 subtraction
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 << }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 left shift
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 >> }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 right shift
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 <  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 less than
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 <= }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 less than or equal to
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 == }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 equal to
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 >  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 greater than
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 >= }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 greater than or equal to
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 != }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 not equal to
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 &  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 bitwise AND
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 ^  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 bitwise XOR
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 |  }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 bitwise OR
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 && }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 logical AND
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 || }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 logical OR
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 ?: }{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 conditional
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\loch\af1\hich\af1\dbch\af23 
\par \hich\af1\dbch\af23\loch\f1 Built-in math functions and constants:
\par }\pard \s15\ql \fi-180\li540\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin540\itap0 {\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 PI
\par \hich\af1\dbch\af23\loch\f1 acos(x)
\par \hich\af1\dbch\af23\loch\f1 asin(x)
\par \hich\af1\dbch\af23\loch\f1 atan(x)
\par \hich\af1\dbch\af23\loch\f1 atan2
\par \hich\af1\dbch\af23\loch\f1 ceil(x)
\par \hich\af1\dbch\af23\loch\f1 cos(x)
\par \hich\af1\dbch\af23\loch\f1 exp(x)
\par \hich\af1\dbch\af23\loch\f1 fabs(x)
\par \hich\af1\dbch\af23\loch\f1 floor(x)
\par \hich\af1\dbch\af23\loch\f1 fmod(x,y)
\par \hich\af1\dbch\af23\loch\f1 log(x)
\par \hich\af1\dbch\af23\loch\f1 log10(x)
\par \hich\af1\dbch\af23\loch\f1 pow(x,y)
\par \hich\af1\dbch\af23\loch\f1 sin(x)
\par \hich\af1\dbch\af23\loch\f1 sqrt(x)
\par \hich\af1\dbch\af23\loch\f1 tan(x)
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\loch\af1\hich\af1\dbch\af23 
\par \hich\af1\dbch\af23\loch\f1 MS-specific functions:
\par 
\par }\pard \s15\ql \fi-360\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 const(addr)}{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 
 - Returns the integer value of MegaSquirt's memory at the specified address.  Look in your assembler output and find the offset of the variables in the c\hich\af1\dbch\af23\loch\f1 \hich\f1 
onstant section.  For example, in the standard B&G v 3.0 code, EGO enable temperature is stored at offset 86 as degrees F minus 40, so \'93\loch\f1 \hich\f1 const(86)\'94\loch\f1  will fetch that value.
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 itable(value, "filename")}{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1  \hich\f1 \endash \loch\f1 \hich\f1  \'93\loch\f1 \hich\f1 Inverse\'94\loch\f1 
 table, causes the table to be read on the first\hich\af1\dbch\af23\loch\f1 \hich\f1  invocation.  Returns the index of the table entry nearest the \'93\loch\f1 \hich\f1 value\'94\loch\f1 
 parameter.  Table files may contain an arbitrary number of 16-bit signed or unsigned quantities.  A good example of use is to feed a throttle position percentage into this function, an\hich\af1\dbch\af23\loch\f1 d\hich\af1\dbch\af23\loch\f1 
 get back the raw ADC value corresponding to that value.
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 table(idx, "filename")}{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1  \hich\f1 \endash \loch\f1 
 Table lookup causes the table to be read on the first invocation.  Indexes into the table and returns the value contained at the specified location.  Table files may contain\hich\af1\dbch\af23\loch\f1 
 an arbitrary number of 16-bit signed or unsigned quantities.
\par 
\par }{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 tempCvt(x)}{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1  - Converts Fahrenheit temperature to user-selected units.  Does nothing if temperature units are already set to F.
\par 
\par }{\dbch\af23 \hich\af2\dbch\af23\loch\f2 timeNow}{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1  - Parameterless function returning the current count of se\hich\af1\dbch\af23\loch\f1 
conds since MegaTune started.  Seems to be accurate to about 1 ms on modern laptops.
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\loch\af1\hich\af1\dbch\af23 
\par }\pard \s15\ql \fi-360\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\dbch\af23 \hich\af2\dbch\af23\loch\f2 v\hich\af2\dbch\af23\loch\f2 exInterp(\hich\af2\dbch\af23\loch\f2 speed\hich\af2\dbch\af23\loch\f2 , load, page, }{
\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 "}{\dbch\af23 \hich\af2\dbch\af23\loch\f2 filename}{\loch\af6\hich\af6\dbch\af23 \hich\af6\dbch\af23\loch\f6 "}{\dbch\af23 \hich\af2\dbch\af23\loch\f2 )}{\loch\af1\hich\af1\dbch\af23 
\hich\af1\dbch\af23\loch\f1  \loch\af1\dbch\af23\hich\f1 \endash \hich\af1\dbch\af23\loch\f1  \hich\af1\dbch\af23\loch\f1 Reads \hich\af1\dbch\af23\loch\f1 a VEX file\hich\af1\dbch\af23\loch\f1  on first invocation\hich\af1\dbch\af23\loch\f1 
, and returns an interpolated value from the \hich\af1\dbch\af23\loch\f1 specified page from the file (page numbers are zero-\hich\af1\dbch\af23\loch\f1 based, so the first page is numbered zero).  The \hich\af1\dbch\af23\loch\f1 speed
\hich\af1\dbch\af23\loch\f1  and \hich\af1\dbch\af23\loch\f1 load values are typically }{\dbch\af23 \hich\af2\dbch\af23\loch\f2 rpm100}{\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1  and }{\dbch\af23 \hich\af2\dbch\af23\loch\f2 map}{
\loch\af1\hich\af1\dbch\af23 \hich\af1\dbch\af23\loch\f1 , corresponding to the values in the VEX file\hich\af1\dbch\af23\loch\f1 .
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\loch\af1\hich\af1\dbch\af23 
\par }}